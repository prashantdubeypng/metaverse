version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: metaverse
      POSTGRES_USER: metaverse_user
      POSTGRES_PASSWORD: metaverse_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U metaverse_user -d metaverse"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Metaverse Application
  metaverse-app:
    build: .
    ports:
      - "3000:3000"  # Frontend
      - "3001:3001"  # HTTP API
      - "3002:3002"  # WebSocket
      - "3003:3003"  # Chat Service
    environment:
      - DATABASE_URL=postgresql://metaverse_user:metaverse_pass@postgres:5432/metaverse
      - JWT_SECRET=your-secure-jwt-secret-change-in-production
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  redis_data:
